//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using SimpleJSON;


namespace MissFrame
{ 
   
public sealed partial class Tables
{
    public Cfg.TbStep TbStep {get; }
    public Cfg.TbSubStep TbSubStep {get; }
    public Cfg.TbActive TbActive {get; }
    public Cfg.TbShowEffectPath TbShowEffectPath {get; }
    public Cfg.TbTweenLookAt TbTweenLookAt {get; }
    public Cfg.TbTweenMove TbTweenMove {get; }
    public Cfg.TbResPrefabAsset TbResPrefabAsset {get; }

    public Tables(System.Func<string, JSONNode> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbStep = new Cfg.TbStep(loader("cfg_tbstep")); 
        tables.Add("Cfg.TbStep", TbStep);
        TbSubStep = new Cfg.TbSubStep(loader("cfg_tbsubstep")); 
        tables.Add("Cfg.TbSubStep", TbSubStep);
        TbActive = new Cfg.TbActive(loader("cfg_tbactive")); 
        tables.Add("Cfg.TbActive", TbActive);
        TbShowEffectPath = new Cfg.TbShowEffectPath(loader("cfg_tbshoweffectpath")); 
        tables.Add("Cfg.TbShowEffectPath", TbShowEffectPath);
        TbTweenLookAt = new Cfg.TbTweenLookAt(loader("cfg_tbtweenlookat")); 
        tables.Add("Cfg.TbTweenLookAt", TbTweenLookAt);
        TbTweenMove = new Cfg.TbTweenMove(loader("cfg_tbtweenmove")); 
        tables.Add("Cfg.TbTweenMove", TbTweenMove);
        TbResPrefabAsset = new Cfg.TbResPrefabAsset(loader("cfg_tbresprefabasset")); 
        tables.Add("Cfg.TbResPrefabAsset", TbResPrefabAsset);
        PostInit();

        TbStep.Resolve(tables); 
        TbSubStep.Resolve(tables); 
        TbActive.Resolve(tables); 
        TbShowEffectPath.Resolve(tables); 
        TbTweenLookAt.Resolve(tables); 
        TbTweenMove.Resolve(tables); 
        TbResPrefabAsset.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbStep.TranslateText(translator); 
        TbSubStep.TranslateText(translator); 
        TbActive.TranslateText(translator); 
        TbShowEffectPath.TranslateText(translator); 
        TbTweenLookAt.TranslateText(translator); 
        TbTweenMove.TranslateText(translator); 
        TbResPrefabAsset.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}